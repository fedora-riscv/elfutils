commit 3bdc16ce98295463c071192eab2ec611a8edc508
Author: Mark Wielaard <mjw@redhat.com>
Date:   Wed Feb 6 16:20:17 2013 +0100

    elflint: Add two more symbols to gnuld list of allowed bad values.
    
    Add __bss_start and __TMC_END__ to the list of symbols allowed to have
    out of section values because of the following GNU ld bug:
    http://sourceware.org/bugzilla/show_bug.cgi?id=13621.
    Allow them to appear in either .symtab or .dynsym, but only when they
    are zero sized. It is impossible to define a general rule for this bug,
    but this should catch most common issues that are mostly harmless
    because the symbols signify the removed section was empty to being with.
    This catches at least all symbols often flagged in the tests.
    
    Signed-off-by: Mark Wielaard <mjw@redhat.com>

diff --git a/src/ChangeLog b/src/ChangeLog
index f3f9b51..7d7b66f 100644
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,3 +1,10 @@
+2013-02-06  Mark Wielaard  <mjw@redhat.com>
+
+	* elflint.c (check_symtab): Add __bss_start and __TMC_END__ to the
+	list of symbols allowed to have out of section values because of
+	GNU ld bugs in either .symtab or .dynsym, but only when they are
+	zero sized.
+
 2012-08-27  Mark Wielaard  <mjw@redhat.com>
 
 	* readelf.c (print_debug_macro_section): Print offset as PRIx64.
diff --git a/src/elflint.c b/src/elflint.c
index 4084987..bc5ed33 100644
--- a/src/elflint.c
+++ b/src/elflint.c
@@ -767,15 +767,22 @@ section [%2d] '%s': symbol %zu: function in COMMON section is nonsense\n"),
 			{
 			  /* GNU ld has severe bugs.  When it decides to remove
 			     empty sections it leaves symbols referencing them
-			     behind.  These are symbols in .symtab.  */
+			     behind.  These are symbols in .symtab or .dynsym
+			     and for the named symbols have zero size.  See
+			     sourceware PR13621.  */
 			  if (!gnuld
-			      || strcmp (section_name (ebl, idx), ".symtab")
+			      || (strcmp (section_name (ebl, idx), ".symtab")
+			          && strcmp (section_name (ebl, idx),
+					     ".dynsym"))
+			      || sym->st_size != 0
 			      || (strcmp (name, "__preinit_array_start") != 0
 				  && strcmp (name, "__preinit_array_end") != 0
 				  && strcmp (name, "__init_array_start") != 0
 				  && strcmp (name, "__init_array_end") != 0
 				  && strcmp (name, "__fini_array_start") != 0
-				  && strcmp (name, "__fini_array_end") != 0))
+				  && strcmp (name, "__fini_array_end") != 0
+				  && strcmp (name, "__bss_start") != 0
+				  && strcmp (name, "__TMC_END__") != 0))
 			    ERROR (gettext ("\
 section [%2d] '%s': symbol %zu: st_value out of bounds\n"),
 				   idx, section_name (ebl, idx), cnt);
commit b94cceae503b56fb360cd597f154fa2b33552887
Author: Mark Wielaard <mjw@redhat.com>
Date:   Sun Feb 24 22:58:49 2013 +0100

    elflint.c (check_symtab): Add __bss_start__ to the list of allowed symbols.
    
    Some architectures (ARM) use __bss_start__ instead of __bss_start.
    
    Signed-off-by: Mark Wielaard <mjw@redhat.com>

diff --git a/src/ChangeLog b/src/ChangeLog
index 7d7b66f..6e219e6 100644
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,3 +1,8 @@
+2013-02-24  Mark Wielaard  <mjw@redhat.com>
+
+	* elflint.c (check_symtab): Add __bss_start__ to the list of symbols
+	allowed to have out of section values because of GNU ld bugs.
+
 2013-02-06  Mark Wielaard  <mjw@redhat.com>
 
 	* elflint.c (check_symtab): Add __bss_start and __TMC_END__ to the
diff --git a/src/elflint.c b/src/elflint.c
index bc5ed33..acd458b 100644
--- a/src/elflint.c
+++ b/src/elflint.c
@@ -782,6 +782,7 @@ section [%2d] '%s': symbol %zu: function in COMMON section is nonsense\n"),
 				  && strcmp (name, "__fini_array_start") != 0
 				  && strcmp (name, "__fini_array_end") != 0
 				  && strcmp (name, "__bss_start") != 0
+				  && strcmp (name, "__bss_start__") != 0
 				  && strcmp (name, "__TMC_END__") != 0))
 			    ERROR (gettext ("\
 section [%2d] '%s': symbol %zu: st_value out of bounds\n"),
